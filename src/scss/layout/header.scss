@use '../base/variable' as var;
@use '../base/mixin' as mix;
@use '../base/extentsions';

$sizeAfterEl: 1.1em;

.navigation {
	position: fixed;
	z-index: 3;
	width: 100%;
	box-sizing: border-box;
	top: 0;
	left: 0;
	color: var.$lightColor;
	background: var.$headerBG;
	transition: transform .8s ease;

	&._hidden {
		transform: translateY(-150%);
	}

	&__top-block {
		color: var.$lightColor;
		background: var.$darkColor;
	}
}

.nav-top {

	& a {
		color: #e0e0e0;
	}

	&__wrapper {
		@include mix.displayFlex(flex, space-between, center);
		gap: 20px;
	}

	&__column {
		flex: 0 1 50%;
		@include mix.displayFlex(flex, flex-start, center);
		padding: .5em 0;
		gap: 20px;
	}

	&__place-marker {
		flex: 0 1 20%;
		position: relative;
		display: block;
		padding-left: 1.3em;
		@include mix.adaptivFont(12, 8);
		color: #e0e0e0;

		&::before {
			@extend %pseudoElement;
			top: 50%;
			left: 0;
			transform: translateY(-50%);
			width: 10px;
			height: 10px;
			background: url('../../assets/images/icon/marker.svg') center center / cover no-repeat;
		}
	}

	&__contacts {
		@include mix.displayFlex(flex, flex-start, center);
		gap: 1.3em;
	}

	&__address {
		flex: 0 1 auto;
		@include mix.adaptivFont(12, 8);
		color: #e0e0e0;

		&>address {
			font-style: normal;
			text-decoration: underline;

			@media (any-hover: hover) {
				&:hover {
					text-decoration: none;
				}
			}
		}
	}

	&__phones {
		@include mix.adaptivFont(14, 12);
		font-weight: 700;
	}

	&__phone {
		position: relative;
		display: inline-block;

		&:before {
			content: '';
			position: absolute;
			bottom: -2px;
			left: 50%;
			transform: translateX(-50%);
			width: 0;
			height: 1px;
			background: var.$lightColor;
			transition: width .4s ease-in-out, color .4s ease-in-out;
		}

		@media (any-hover: hover) {
			&:hover {
				color: #fff;

				&:before {
					width: 100%;
				}
			}
		}
	}

	&__buttons {
		flex: 0 1 auto;
		@include mix.displayFlex(flex, flex-start, center);
		gap: 16px;
	}

	&__button {
		padding: .5em 1em;
		@include mix.adaptivFont(12, 8);
		border-radius: 7px;
	}

	&__button_services {
		position: relative;
		padding-left: 2em;

		&::before {
			@extend %pseudoElement;
			top: 50%;
			left: .5em;
			transform: translateY(-50%);
			width: 10px;
			height: 10px;
			background: url('../../assets/images/icon/clock.svg') center center / cover no-repeat;
		}
	}
}

.nav {
	flex: 1 1 auto;
	@include mix.displayFlex(flex, center, center);

	&__list {
		@include mix.displayFlex(flex, center, center);
		gap: 16px;
	}

	&__item-hidden {
		display: none;
	}

	&__link {
		position: relative;
		display: block;
		padding: 0;
		color: #e0e0e0;
		font-weight: 400;
		@include mix.adaptivFont(12, 8);
		line-height: var.$generalLineHeight;

		&:before {
			content: '';
			position: absolute;
			bottom: -2px;
			left: 50%;
			transform: translateX(-50%);
			width: 0;
			height: 1px;
			background: var.$lightColor;
			transition: width .4s ease-in-out, color .4s ease-in-out;
		}

		@media (any-hover: hover) {
			&:hover {
				color: #fff;

				&:before {
					width: 100%;
				}
			}
		}
	}
}

.nav-bottom {
	padding: 1em 0;

	&__row {
		@include mix.displayFlex(flex, space-between, center);
		gap: 20px;

		&:first-child {
			margin-bottom: 1.3em;
		}
	}

	&__column {
		display: flex;
		gap: 20px;
	}

	&__column_center {
		flex: 1 1 auto;
		align-items: stretch;
	}

	&__btn-catalog {
		width: 100%;
		max-width: 140px;
		font-weight: 500;
		@include mix.adaptivFont(14, 12);
		gap: 5px;

		&>span {
			position: relative;
			display: block;
			width: 16px;
			height: 10px;

			&::before,
			&::after {
				@extend %pseudoElement;
				left: 0;
				width: 100%;
				height: 2px;
				border-radius: 10px;
				background: var.$lightColor;
			}

			&::before {
				top: 0;
			}

			&::after {
				bottom: 0;
			}
		}
	}

	&__form {
		display: flex;
		overflow: hidden;
		width: 100%;
		max-width: 640px;
		border: 1px solid var.$accentColorTwo;
		border-radius: 10px;
		background-color: var.$accentColorTwo;

		&>input {
			width: 100%;
			padding: .7em 1em;
			border: none;
			outline: none;
			border-radius: 9px;
		}

		& button {
			@include mix.displayFlex(flex, center, center);
			width: 100%;
			max-width: 80px;
			background: transparent;
			transition: opacity .6s ease;

			@media (any-hover: hover) {
				&:hover {
					opacity: .6;
				}
			}

			&>span {
				display: block;
				width: 16px;
				height: 16px;
				background: url('../../assets/images/icon/search.svg') center center / cover no-repeat;
			}
		}
	}

	&__authorization {
		position: relative;
		width: 100%;
		max-width: 100px;
		padding: 1.2em 2em 1.2em 4em;
		color: var.$accentColorTwo;
		@include mix.adaptivFont(12, 8);
		font-weight: 600;
		border-radius: 20px;
		background-color: #f2f2f2;
		transition: opacity .6s ease;

		&::before {
			@extend %pseudoElement;
			top: 50%;
			left: .5em;
			transform: translateY(-50%);
			width: 30px;
			height: 30px;
			border: 1px solid #e0e0e0;
			border-radius: 50%;
			background: url('../../assets/images/icon/person.svg') center center / 60% 60% no-repeat;
		}

		@media (hover: hover) and (pointer: fine) {
			&:hover {
				opacity: .6;
			}
		}
	}

	&__list {
		display: flex;
		align-items: stretch;
		gap: 16px;
	}

	&__link {
		position: relative;
		@include mix.displayFlex(flex, center, flex-end);
		height: 100%;
		color: #333;
		@include mix.adaptivFont(12, 8);
		transition: opacity .4s ease;

		&::before {
			@extend %pseudoElement;
			top: .5em;
			left: 50%;
			transform: translateX(-50%);
			width: 16px;
			min-height: 16px;
		}

		&.--order::before {
			background: url('../../assets/images/icon/orders.svg') center center / cover;
		}

		&.--comparison::before {
			background: url('../../assets/images/icon/comparison.svg') center center / cover;
		}

		&.--favorite::before {
			width: 18px;
			background: url('../../assets/images/icon/favorite.svg') center center / cover;
		}

		&.--cart::before {
			background: url('../../assets/images/icon/cart.svg') center center / cover;
		}

		@media (any-hover: hover) {
			&:hover {
				opacity: .6;
			}
		}
	}

	&__categories {
		@include mix.displayFlex(flex, flex-start, center);
		gap: 16px;
	}

	&__categories-link {
		position: relative;
		overflow: hidden;
		display: block;
		color: var.$darkColor;
		@include mix.adaptivFont(12, 8);
		font-weight: 600;
		text-transform: uppercase;

		&>span {
			position: relative;
			display: block;
			transition: all .4s ease;
		}

		&::before {
			content: attr(data-link);
			position: absolute;
			z-index: 1;
			bottom: 100%;
			left: 0;
			width: 100%;
			height: 100%;
			white-space: nowrap;
			transition: transform .4s ease;
		}

		@media (hover: hover) and (pointer: fine) {
			&:hover {
				&>span {
					transform: translateY(100%);
				}

				&::before {
					transform: translateY(100%);
				}
			}
		}
	}

	&__categories-link_accent {
		color: #ea5455;
	}
}